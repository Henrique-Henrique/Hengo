extends GutTest

const GENERATED_CODE = """# ***************************************************************
# *                 CREATED BY HENGO VISUAL SCRIPT              *
# *    This file is automatically generated and maintained by   *
# *               the Hengo Visual Script tool.                 *
# *       Edit only if you are confident in your changes.       *
# ***************************************************************

extends Sprite2D

 # Variables #


var _STATE_CONTROLLER = HengoStateController.new()

const _EVENTS ={}

func _init() -> void:
	_STATE_CONTROLLER.set_states({
		state_1=State1.new(self)
	})

func _ready() -> void:
	if not _STATE_CONTROLLER.current_state:
		_STATE_CONTROLLER.change_state("state_1")


func trigger_event(_event: String) -> void:
	if _EVENTS.has(_event):
		_STATE_CONTROLLER.change_state(_EVENTS[_event])

func _process(delta: float) -> void:
	_STATE_CONTROLLER.static_process(delta)


func _physics_process(delta: float) -> void:
	_STATE_CONTROLLER.static_physics_process(delta)

class State1 extends HengoState:
	pass
"""


func test_save() -> void:
	# setting global
	var global_script_data := HenGlobal.ScriptData.new()

	global_script_data.id = 0
	global_script_data.path = 'res://hengo/test.gd'
	global_script_data.type = 'Sprite2D'

	HenGlobal.script_config = global_script_data
	HenGlobal.SIDE_BAR_LIST = HenSideBar.SideBarList.new()
	HenGlobal.BASE_ROUTE = {
		name = 'Base',
		type = HenRouter.ROUTE_TYPE.BASE,
		id = '0',
		ref = HenLoader.BaseRouteRef.new()
	}

	var start_state: HenVirtualCNode = HenVirtualCNode.instantiate_virtual_cnode({
		name = 'Start State',
		type = HenVirtualCNode.Type.STATE_START,
		sub_type = HenVirtualCNode.SubType.STATE_START,
		position = Vector2(0, 0),
		can_delete = false,
		route = HenGlobal.BASE_ROUTE
	})

	var state: HenVirtualCNode = HenVirtualCNode.instantiate_virtual_cnode({
		name = 'State 1',
		type = HenVirtualCNode.Type.STATE,
		sub_type = HenVirtualCNode.SubType.STATE,
		route = HenGlobal.BASE_ROUTE
	})

	start_state.add_flow_connection(0, 0, state).add()

	var script_data: HenScriptData = HenSaver.generate_script_data()
	var code: String = HenCodeGeneration.get_code(script_data)

	print(code.contains('class State1 extends HengoState:\n\tpass'))


	# assert_eq(
	# 	code,
	# 	GENERATED_CODE
	# )